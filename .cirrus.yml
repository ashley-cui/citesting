---

# Main collection of env. vars to set for all tasks and scripts.
env:
    ####
    #### Cache-image names to test with (double-quotes around names are critical)
    ####
    FEDORA_NAME: "fedora-40"
    FEDORA_AARCH64_NAME: "${FEDORA_NAME}-aarch64"

    # Image identifiers
    IMAGE_SUFFIX: "c20250401t092024z-f41f40d13"

    # EC2 images
    FEDORA_AMI: "fedora-aws-${IMAGE_SUFFIX}"
    FEDORA_AARCH64_AMI: "fedora-podman-aws-arm64-${IMAGE_SUFFIX}"
    WINDOWS_AMI: "win-server-wsl-${IMAGE_SUFFIX}"

    # Container
    FEDORA_CONTAINER_FQIN: "quay.io/acui/fedora_podman:${IMAGE_SUFFIX}"

    # directory where the images will be placed
    OUTDIR: "outdir"

    CIRRUS_WORKING_DIR: /var/tmp/podman-machine-os

    # Vars used for the macos and windows testing
    MACHINE_IMAGE_BASE_URL: "https://api.cirrus-ci.com/v1/artifact/build/${CIRRUS_BUILD_ID}/image_build/image/"
    # podman version used by windows/macos verify suite
    PODMAN_INSTALL_VERSION: 5.4.1

aws_credentials: ENCRYPTED[db247afa12c49a0578e391e573dd71302df83698a66975a87996b1388473d04e52d2f50031bbf7bc0319508a1b21ba66]

# Default timeout
timeout_in: 30m

image_build_task:
    name: "Image Build ${ARCH}"
    alias: "image_build"
    ec2_instance:
        image: "${VM_IMAGE}"
        type: "${EC2_INST_TYPE}"
        region: us-east-1
        architecture: "${GO_ARCH}"
    env:
        HOME: /root
    matrix:
        - env:
            ARCH: "x86_64"
            GO_ARCH: "amd64"
            VM_IMAGE: "${FEDORA_AMI}"
            EC2_INST_TYPE: "m5zn.metal"  # Bare-metal instance is required
        - env:
            ARCH: "aarch64"
            GO_ARCH: "arm64"
            VM_IMAGE: "${FEDORA_AARCH64_AMI}"
            EC2_INST_TYPE: "c6g.metal"  # Bare-metal instance is required

    setup_script: ./contrib/cirrus/setup.sh
    build_script: ./build.sh
    image_prep_script: |
        mv $OUTDIR/*.zst .
        mv $OUTDIR/podman-machine podman-machine.${ARCH}.tar
    image_artifacts: &image_artifacts
        path: "*.{zst,tar}"
        type: application/octet-stream

image_push_task:
    name: "Image Push"
    alias: "image_push"
    # Make sure that there are not two push running at the same time.
    execution_lock: $CIRRUS_BRANCH
    # Less likely the task is canceled.
    stateful: true
    # Only push new images when not run on a PR.
    only_if: $CIRRUS_TAG != ''
    depends_on:
        - image_build
    ec2_instance:
        image: "${VM_IMAGE}"
        type: "${EC2_INST_TYPE}"
        region: us-east-1
    env:
        HOME: /root
        VM_IMAGE: "${FEDORA_AMI}"
        EC2_INST_TYPE: "m5.large"
        # QUAY_USER: ENCRYPTED[53d23fbd39a3b8b0daf015edac296b56964da0b523767f79d3a8131a4871523b90c5a7554c91172c1ca0066e492853e3]
        # QUAY_PASSWORD: ENCRYPTED[3cfabb0f7fa6a36dc6af433f5a0291d87b38402c922b662e9647931a635f20ca33401aa91b29745b7af252538406a292]

    main_script: |
        mkdir $OUTDIR
        for end in applehv.raw.zst hyperv.vhdx.zst qemu.qcow2.zst tar; do
            for arch in x86_64 aarch64; do
                name="podman-machine.$arch.$end"
                curl --retry 5 --retry-delay 8 --fail --location -O --output-dir $OUTDIR --url "${MACHINE_IMAGE_BASE_URL}$name"
            done
        done

        source ./gather.sh
        podman images
        # podman login -u  "$QUAY_USER" --password-stdin quay.io <<<"$QUAY_PASSWORD"
        # time podman manifest push --all "$FULL_IMAGE_NAME"

# test_task:
#     name: "Total Success"
#     alias: success
#     depends_on:
#         - image_build
#         - image_push
#     container:
#         image: "${FEDORA_CONTAINER_FQIN}"
#         cpu: 1
#         memory: 1
#     noop_script: true
